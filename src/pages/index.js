import Head from 'next/head'
import { Inter } from 'next/font/google'
import { use, useState } from 'react';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  
  const [manejoStart , setManejoStart] = useState(false);
  const [character, setCharacter] = useState([]);
  const [randomCharact, setRandomCharact] = useState([]);
  const [manejoFlip, setManejoFlip] = useState(true);

  const manejStart = () => {
    setManejoStart(true)
  }

  const manejFlip = () => {
    setManejoFlip(false)
  }

  const baraja = (array) => {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return setRandomCharact(array);
  }

  const getRickAndMortyCharacters = async() => {
    const characterArr = [];
    for(let i = 1; i <= 9; i++){
      const rdm = Math.floor(Math.random() * 826);
    const data = await fetch(`https://rickandmortyapi.com/api/character/${rdm}`, 
    {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });
    const res = await data.json();
    // if (data === false) para retornar loader
    // {
    //   return (
    //     <div>

    //     </div>
    //   )
    // }
    characterArr.push(res);
  };
  setCharacter(characterArr);
  baraja(characterArr)
  }


  const primerClick = () => {
    manejFlip();
    console.log("first click")
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={manejoStart ? 'w-full flex justify-center items-center py-6 ' : 'w-full h-[100%] absolute flex justify-center items-center py-6'}>
        <button className='bg-green-500 rounded-md px-4 py-1 m-1 hover:bg-black absolute hover:border-white hover:border'
        onClick={() => {
          getRickAndMortyCharacters();
          manejStart();
        }}>
          Empezar
        </button>
      </div>


      <div className={manejoStart ? 'w-full h-1/2 flex items-center justify-center' : 'hidden'}>
        <div className='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-6 text-center text-white h-1/2 w-[550px] sm:w-[550px] md:w-[650px] lg:w-[1000px]'>
              {character.map((character) => (
                <div key={character.id} id={"button-" + character.id} className={ manejoFlip ? 'w-max z-0 m-4 duration-1000' : 'w-max bg-green-400 m-4 duration-1000'}>
                  <button onClick={primerClick}>
                   <div className='border-2 py-6 rounded-md flex justify-center items-center flex-col h-[200px] w-[150px]'>
                      <div className='p-2'>
                        <img className='rounded-lg' src={character.image} height={125} width={125}/>
                      </div>
                     <div className='p-2 m-1 text-center text-xs'>
                       <p className='break-words'>{character.name}</p>
                    </div>
                   </div>
                  </button>
                </div>
              ))}
              {randomCharact.map(randomCharact => (
                <div key={randomCharact.id} id={"button-" + randomCharact.id + "-pair"} className={ manejoFlip ? 'w-max z-0 m-4 duration-1000' : 'w-max bg-green-400 m-4 duration-1000'}>
                  <button onClick={primerClick} >
                    <div className='border-2 py-6 rounded-md flex justify-center items-center flex-col h-[200px] w-[150px]'>
                      <div className='p-2'>
                        <img className='rounded-lg' src={randomCharact.image} height={125} width={125}/>
                      </div>
                      <div className='p-2 m-1 text-center text-xs'>
                        <p className='break-words'>{randomCharact.name}</p>
                      </div>
                    </div>
                  </button>
                </div>
              ))}
        </div>
      </div>
    </>
  );
}

// export async function getServerSideProps(context){
//   const character = [];
//   for(let i = 1; i <= 10; i++){
//     const rdm = Math.floor(Math.random() * 826);

//     const data = await fetch("https://rickandmortyapi.com/api/character/55", 
//     {
//       method: "GET",
//       headers: {
//         "Content-Type": "application/json",
//       },
//     });
//     const res = await data.json();
//     const character = [];
//     character.push(res)
//     setCharacter(character);
  
//   }

//   return {props:{}};
// }